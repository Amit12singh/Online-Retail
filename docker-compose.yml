version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092   # Changed from kafka:9092 to localhost:9092 for host access
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

  spark:
    image: bitnami/spark:latest
    container_name: spark
    volumes:
      - .:/app
    working_dir: /app
    stdin_open: true
    tty: true
    depends_on:
      - kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

  dashboard:
    build: ./dashboard
    container_name: dashboard
    ports:
      - "8501:8501"  # Streamlit port
    volumes:
      - ./dashboard:/app
    working_dir: /app
    command: ["streamlit", "run", "dashboard.py"]
    depends_on:
      - kafka

  producer:
    build: ./producer
    container_name: producer
    volumes:
      - ./producer:/app
    working_dir: /app
    command: ["python", "producer.py"]
    depends_on:
      - kafka

  consumer:
    build: ./consumer
    container_name: consumer
    volumes:
      - ./consumer:/app
    working_dir: /app
    command: ["python", "consumer.py"]
    depends_on:
      - kafka

networks:
  default:
    name: retail-net